<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Turn on views
view_enabled = true;

//Variables
move = true;
prevX = noone;
prevY = noone;

//Initialize State
state = "player";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Make sure inventory is closed
if (!global.showInv) {
    //Track the mouse
    if (abs(x - mouse_x) &lt; 8 &amp;&amp; abs(y - mouse_y) &lt; 8) move = false;
    else move = true;

    //Follow the mouse
    if (instance_exists(obj_player) &amp;&amp; move &amp;&amp; state != "regress") {
        if (x != mouse_x) x += (mouse_x - x)/20;
        if (y != mouse_y) y += (mouse_y - y)/20;
    }

    //Set the view and lock on player
    view_object[0] = obj_player;
    view_xview[0] = x - 140;
    view_wview[0] = 320;
    view_yview[0] = y - 90;
    view_hview[0] = 180;
    
    //Switch Block
    switch (state) {
        case "player": {
            //Leash the camera movement
            x = clamp(x, obj_player.x - 32, obj_player.x + 32);
            y = clamp(y, obj_player.y - 32, obj_player.y + 32);   
            
            if (obj_player.ranged) {
                prevX = x;
                prevY = y;
                //state = "aim";
            }
            break;
        }
        case "aim": {
            //Leash the camera movement
            x = clamp(x, obj_player.x - 64, obj_player.x + 64);
            y = clamp(y, obj_player.y - 64, obj_player.y + 64);   
        
            if (!obj_player.ranged) state = "regress";
            break;
        }
        case "regress": {
            //Check to see if outside standard range
            if (distance_to_point(obj_player.x, obj_player.y) &gt; 32) {
                //Regress to player leash range
                if (instance_exists(obj_player)) {
                    state = "player";
                    if (x != prevX) x += (prevX - x)/10;
                    if (y != prevY) y += (prevY - y)/10;
                }
            }
            //Prevent overshooting the target
            if (x == prevX &amp;&amp; y == prevY) state = "player";
            break;
        }
        default: break;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_text(x + 30, y, x);
draw_text(x + 30, y + 30, y);

draw_text(x, y, prevX);
draw_text(x, y + 10, prevY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
