<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
toggle = false;

/*Stamina*/
global.stamina = 100;
global.maxStamina = 100;
staminaCol = make_color_rgb(204, 204, 204);

/*Health*/
global.hp = 100;
global.hpMax = 100;

/*Position*/
x1 = window_get_x() - global.stamina/2 - 2;
x2 = window_get_x() - 2;
x3 = window_get_x() - 2;
x4 = window_get_x() - 2;
x5 = window_get_x() - 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toggle = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Logic
//Check to see if the player has toggled their view
scr_getInput();
if (key_int &amp;&amp; !global.talk &amp;&amp; obj_player.state = pst.normal) {
    toggle = true;
    alarm_set(0, 150);
}
if (obj_player.stamCD == true) toggle = true;
    
/*Stamina*/
if (obj_player.stamCD == false &amp;&amp; global.stamina &lt; global.maxStamina &amp;&amp; obj_player.state == pst.normal) {
    if (global.stamina &lt; global.maxStamina) global.stamina+=2; 
}

/*Health*/
if (global.hp &lt;= 0) game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the status bars
if (toggle) {
    if (x1 &lt; window_get_x() - 2) x1+=4;
    if (x2 &lt; window_get_x() + global.stamina/2 + 2) x2+=4;
    if (x3 &lt; window_get_x() + global.hp + 2) x3+=4;
    if (x4 &lt; window_get_x() + 52) x4+=4;
    if (x5 &lt; window_get_x() + 102) x5+=4;
} else {
    if (x1 &gt; window_get_x() - global.stamina/2 - 2) x1-=4;
    if (x2 &gt; window_get_x() - 2) x2-=4;
    if (x3 &gt; window_get_x() - 2) x3-= 4;
    if (x4 &gt; window_get_x() - 2) x4-=4;
    if (x5 &gt; window_get_x() - 2) x5-=4;
}

//Set Text values
draw_set_font(fnt_text);

/*Stamina*/
//Background
draw_roundrect_color_ext(x1, window_get_y() + 17, x4, window_get_y() + 22, 3, 3, c_gray, c_gray, false);
//Stamina Value
draw_roundrect_colour_ext(x1, window_get_y() + 15, x2 - 2, window_get_y() + 20, 3, 3, staminaCol, staminaCol, false);

/*Health*/
//Background
draw_roundrect_color_ext(x1, window_get_y() + 4, x5, window_get_y() + 14, 3, 3, c_gray, c_gray, false);
//Health Value
draw_roundrect_color_ext(x1, window_get_y() + 2, x3 - 2, window_get_y() + 12, 3, 3, c_teal, c_teal, false);
draw_text(x1 + 10, window_get_y() + 2, string(global.hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
