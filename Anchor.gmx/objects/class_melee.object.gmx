<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_weapon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hitDirection = 0;
isActive = true;
if (owner == class_player) isActive = false;

damageAmount = 0;
damageVariance = 0;
critChance = 0.5;
if (owner == class_player) trigger = input_mouse_left_click();
else trigger = 1;
diag1 = false;
diag2 = false;

min_sensitivity = 0.1; //actually more sensitive
max_sensitivity = 2.0; //vice versa
//recommended sensitivty setting of 1.2

hitbox = hitbox_default;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug || Test Code
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.pause</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacks
if (owner == class_player) {
    trigger = input_mouse_left_click();
    
    if (instance_exists(owner) &amp;&amp; isActive &amp;&amp; trigger &amp;&amp; owner.state_name != "Melee" &amp;&amp; owner.state_name != "Dash") {
        if (owner == class_player) {
            with (owner) {
                alarm_set(1, 1);
                state_switch("Melee", true);
            }
        }
        
        alarm_set(0, room_speed * 3);
        visible = true;
        
        angle = point_direction(x, y, mouse_x, mouse_y);
        
        if (angle &gt; 330 || angle &lt;= 30) instance_create(x + 32, y, hitbox);
        else if (angle &gt; 30 &amp;&amp; angle &lt;= 60) instance_create(x + 32, y - 32, hitbox);
        else if (angle &gt; 60 &amp;&amp; angle &lt;= 120) instance_create(x, y - 32, hitbox);
        else if (angle &gt; 120 &amp;&amp; angle &lt;= 150) instance_create(x - 32, y - 32, hitbox);
        else if (angle &gt; 150 &amp;&amp; angle &lt;= 210) instance_create(x - 32, y, hitbox);
        else if (angle &gt; 210 &amp;&amp; angle &lt;= 240) instance_create(x - 32, y + 32, hitbox);
        else if (angle &gt; 240 &amp;&amp; angle &lt;= 300) instance_create(x, y + 32, hitbox);
        else if (angle &gt; 300 &amp;&amp; angle &lt;= 330) instance_create(x + 32, y + 32, hitbox);
    }
} else {
    if (instance_exists(owner) &amp;&amp; isActive &amp;&amp; trigger) {
        alarm_set(0, room_speed * 3);
        visible = true;
    
        angle = point_direction(x, y, class_player.x, class_player.y);
        
        if (angle &gt; 330 || angle &lt;= 30) instance_create(x + 32, y, hitbox);
        else if (angle &gt; 30 &amp;&amp; angle &lt;= 60) instance_create(x + 32, y - 32, hitbox);
        else if (angle &gt; 60 &amp;&amp; angle &lt;= 120) instance_create(x, y - 32, hitbox);
        else if (angle &gt; 120 &amp;&amp; angle &lt;= 150) instance_create(x - 32, y - 32, hitbox);
        else if (angle &gt; 150 &amp;&amp; angle &lt;= 210) instance_create(x - 32, y, hitbox);
        else if (angle &gt; 210 &amp;&amp; angle &lt;= 240) instance_create(x - 32, y + 32, hitbox);
        else if (angle &gt; 240 &amp;&amp; angle &lt;= 300) instance_create(x, y + 32, hitbox);
        else if (angle &gt; 300 &amp;&amp; angle &lt;= 330) instance_create(x + 32, y + 32, hitbox);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug || Test Code
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (owner == class_player) {
    if (mouse_x &gt; class_player.x) {
        image_xscale = -1;
        //image_angle = point_direction(x, y, mouse_x, mouse_y);
    } else {
        image_xscale = 1;
        //-image_angle = point_direction(x, y, mouse_x, mouse_y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
