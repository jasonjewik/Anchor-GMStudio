<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_shadowed</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hSpeed = 0;
vSpeed = 0;
hSpeedFrac = 0;
vSpeedFrac = 0;
hSpeedFinal = 0;
vSpeedFinal = 0;
maxSpeed = 3.5;
dashSpeed = 5.0;
accl = 0.4;
frc = accl * 0.8;
push = false;
angle = 0;

name = "";
maxHp = 100;
hp = maxHp;
hpRegen = 0;
maxStamina = 100;
stamina = maxStamina;
staminaRegen = 2;
dashCost = maxStamina/4;
max_timeEssence = 100;
timeEssence = max_timeEssence;
global.hudOpen = false;

global.isDashing = false;
global.timeSlow = false;
global.xFace = 0;
global.yFace = 0;
persistent = true;

sprite_idle = player_default_idle;
sprite_idle_back = player_default_idle_back;
sprite_idle_left = player_default_idle_left;
sprite_idle_right = player_default_idle_right;
sprite_walk = player_default_walkingforward;
sprite_walk_back = player_default_walkingback;
sprite_walk_left = player_default_walkingleft;
sprite_walk_right = player_default_walkingright;
sprite_dash = player_default_dash;

//Finite State Machine
state_machine_init();
state_create("Idle", player_idle);
state_create("Run", player_run);
state_create("Dash", player_dash);
state_create("Melee", player_melee);
state_create("Shoot", player_shoot);
state_create("Talk", player_talk);
state_create("Damage", player_damage);
state_create("Die", player_die);
state_init("Idle");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.pause) room_goto(rm_death);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.pause</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute States
state_execute();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
switch (state_name) {
    case "Idle":
        if (keyboard_check_released(ord("W"))) sprite_index = sprite_idle;
        else if (keyboard_check_released(ord("S"))) sprite_index = sprite_idle_back;
        else if (keyboard_check_released(ord("A"))) sprite_index = sprite_idle_left;
        else if (keyboard_check_released(ord("D"))) sprite_index = sprite_idle_right;
        break;
    case "Run":
        if (keyboard_check_released(ord("W"))) sprite_index = sprite_walk_back;
        else if (keyboard_check_released(ord("S"))) sprite_index = sprite_walk;
        else if (keyboard_check_released(ord("A"))) sprite_index = sprite_walk_left;
        else if (keyboard_check_released(ord("D"))) sprite_index = sprite_walk_right;
        break;
    case "Dash":
        if (angle &gt; 330 || angle &lt;= 30) sprite_index = sprite_dash;
        else if (angle &gt; 30 &amp;&amp; angle &lt;= 60) sprite_index = sprite_dash; 
        else if (angle &gt; 60 &amp;&amp; angle &lt;= 120) sprite_index = sprite_dash;
        else if (angle &gt; 120 &amp;&amp; angle &lt;= 150) sprite_index = sprite_dash;
        else if (angle &gt; 150 &amp;&amp; angle &lt;= 210) sprite_index = sprite_dash;
        else if (angle &gt; 210 &amp;&amp; angle &lt;= 240) sprite_index = sprite_dash;
        else if (angle &gt; 240 &amp;&amp; angle &lt;= 300) sprite_index = sprite_dash;
        else if (angle &gt; 300 &amp;&amp; angle &lt;= 330) sprite_index = sprite_dash;
    default: 
        if (keyboard_check_released(ord("W"))) sprite_index = sprite_idle;
        else if (keyboard_check_released(ord("S"))) sprite_index = sprite_idle_back;
        else if (keyboard_check_released(ord("A"))) sprite_index = sprite_idle_left;
        else if (keyboard_check_released(ord("D"))) sprite_index = sprite_idle_right;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state_name == "Dash") state_switch_previous();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
